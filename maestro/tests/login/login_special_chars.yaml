# Test ID: LOGIN-SPECIAL-CHARS-001
# Description: Verify login with special characters in password field
# Preconditions: User is on the login screen
# Expected Results:
#   - System should handle special characters in the password field
#   - Appropriate error message should be displayed for invalid credentials
#   - User remains on the login screen with form still functional
# Tags: [regression, authentication, security]
# Test configuration
appId: com.kapil.jain.boltexponativewind
name: Login with special characters in password
tags: [regression, authentication, security]
---

# Load POM
- runScript: 
    file: ../../elements/login.js

# Launch the app
- runFlow: "_common/launch_app.yaml"

# Verify login screen elements are visible
- runFlow: "_common/verify_login_screen.yaml"

# Define test data with special characters
- runScript: |
    output.specialPassword = "!@#$%^&*()_+-=[]{}|;:,.<>?"

# Fill in credentials with special characters in password
- runFlow: 
    file: "_common/fill_credentials.yaml"
    env:
      LOGIN_EMAIL: "test@example.com"
      LOGIN_PASSWORD: "${output.specialPassword}"

# Verify the password was entered correctly (masked)
- assertNotVisible:
    text: "${output.specialPassword}"
    timeout: 1000

# Submit login form
- runFlow: "_common/submit_login.yaml"

# Wait for the login attempt to complete
- waitForAnimationToEnd

# Verify the error toast is shown for invalid credentials
- assertVisible:
    id: "toast-message"
    text: "Invalid login credentials"

# Verify we're still on the login screen and form is still functional
- assertVisible: "${output.login.signInButton}"
- assertVisible: "${output.login.emailInput}"
- assertVisible: "${output.login.passwordInput}"

# Verify the login button is still enabled for retry
- assertVisible:
    id: "${output.login.signInButton}"
    enabled: true
