# Test ID: REG-SUCCESS-001
# Description: Verify successful user registration with valid credentials
# Preconditions: User is not logged in and email is not registered
# Expected Results: User is registered and sees success message
# Tags: [regression, authentication, critical]
appId: com.kapil.jain.boltexponativewind
name: "Register with valid credentials"
tags: [regression, authentication, critical]
---
# Load Page Object Models
- runScript: 
    file: "../../elements/login.js"  # Load login POM first
- runScript: 
    file: "../../elements/register.js"

# Launch the app
- runFlow: "../_common/launch_app.yaml"

# Navigate to registration screen using the correct POM reference with output. prefix
- tapOn: 
    id: '${output.login.signUpLink}'

# Verify registration screen elements
- runFlow: "_common/verify_register_screen.yaml"

# Load test data
- runScript: 
    file: "../../config/testdata.js"

# Fill registration form with valid data
- runFlow: 
    file: "_common/fill_registration_form.yaml"
    env:
      FULL_NAME: "${output.testData.users.newUser.name}"
      EMAIL: "${output.testData.users.newUser.email}"
      PASSWORD: "${output.testData.users.newUser.password}"
      CONFIRM_PASSWORD: "${output.testData.users.newUser.password}"

# Submit registration form
- runFlow: "_common/submit_registration.yaml"

# Verify successful registration
- assertVisible:
    id: 'registration-success-message'
    text: '${output.register.registrationSuccess}'
- assertVisible: '${output.register.checkEmailMessage}'

# Verify navigation to email verification screen
- assertVisible: 'Verify Your Email'
- assertVisible: '${output.testData.users.newUser.email}'
