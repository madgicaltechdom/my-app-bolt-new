# Test ID: REG-VALIDATION-003
# Description: Verify validation for mismatched passwords
# Preconditions: User is on the registration screen
# Expected Results: Error message is displayed when passwords don't match
# Tags: [regression, validation, critical]
appId: com.kapil.jain.boltexponativewind
name: "Registration - Password Mismatch"
tags: [regression, validation, critical]
---
# Load Page Object Model and test data
- runScript: 
    file: "../../elements/register.js"
- runScript:
    file: "../../config/testdata.js"

# Launch the app and navigate to registration
- runFlow: "../_common/launch_app.yaml"
- tapOn: "${login.registerLink}"

# Verify registration screen elements
- runFlow: "_common/verify_register_screen.yaml"

# Load test data
- runScript: 
    file: "../../config/testdata.js"

# Fill in valid data except for mismatched passwords
- tapOn: '${register.fullNameInput}'
- inputText: '${output.testData.users.validUser.name}'

- tapOn: '${register.emailInput}'
- inputText: '${output.testData.users.validUser.email}'

# Enter different passwords
- tapOn: '${register.passwordInput}'
- inputSecret: '${output.testData.users.validUser.password}'

- tapOn: '${register.confirmPasswordInput}'
- inputSecret: 'DifferentPassword123!'

# Tap away to trigger validation
- tapOn: '${register.fullNameInput}'

# Verify password mismatch error
- assertVisible:
    id: 'confirm-password-error'
    text: '${register.passwordsDontMatchError}'

# Verify sign up button is disabled
- assertNotVisible: '${register.signUpButton}'

# Fix the password to match
- tapOn: '${register.confirmPasswordInput}'
- clearText
- inputSecret: '${output.testData.users.validUser.password}'

# Verify error is cleared and button is enabled
- assertNotVisible: '${register.passwordsDontMatchError}'
- assertVisible: '${register.signUpButton}'
